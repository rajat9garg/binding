package com.biding.controllers.mappers

import com.biding.domain.model.Item
import com.biding.domain.model.ItemStatus
import com.biding.generated.model.CreateItemRequest
import com.biding.generated.model.ItemResponse
import java.time.Instant
import java.time.ZoneId
import java.time.ZoneOffset

fun CreateItemRequest.toModel(createdBy: Long): Item {
    val now = Instant.now()
    return Item(
        name = name,
        description = description,
        basePrice = basePrice,
        status = ItemStatus.DRAFT,
        auctionStartTime = auctionStartTime.toInstant(),
        auctionEndTime = auctionEndTime.toInstant(),
        createdBy = createdBy,
        // Other fields will use their default values:
        // id = null (will be generated by the database)
        // currentBidId = null (no bids initially)
        // version = 0 (initial version)
        // createdAt = now (set in constructor)
        // updatedAt = now (set in constructor)
    )
}

fun Item.toResponse(): ItemResponse {
    return ItemResponse(
        id = id!!,
        name = name,
        description = description,
        basePrice = basePrice,
        auctionStartTime = auctionStartTime.atOffset(ZoneOffset.UTC),
        auctionEndTime = auctionEndTime.atOffset(ZoneOffset.UTC),
    )
}

fun Item.toItemResponse(): ItemResponse {
    return ItemResponse(
        id = id!!,
        name = name,
        description = description,
        basePrice = basePrice,
        status =
            ItemResponse. Status.valueOf(status.name),
        auctionStartTime = auctionStartTime.atOffset(ZoneOffset.UTC),
        auctionEndTime = auctionEndTime.atOffset(ZoneOffset.UTC),
        createdBy = createdBy,
        version = version,
        createdAt = createdAt.atOffset(ZoneOffset.UTC),
        updatedAt = updatedAt.atOffset(ZoneOffset.UTC)
    )
}